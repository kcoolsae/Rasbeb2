POST    /e/:eventId   controllers.event.EventController.editEvent(request: Request, eventId: Int)
GET     /d/:eventId   controllers.event.EventController.downloadSelectedPupils(request: Request, eventId: Int)
GET     /g/:eventId   controllers.event.EventController.getEvent(request: Request, eventId: Int)
GET     /perm/:eventId                        controllers.event.EventController.viewPermissions(request: Request, eventId: Int)
POST    /perm/:eventId/:classId/:fromHome     controllers.event.EventController.addPermissions(request: Request, eventId: Int, classId: Int, fromHome: Boolean)
POST    /part/:eventId/:contestId/:pupilId    controllers.event.EventController.editParticipationDeadline(request: Request, eventId: Int, contestId: Int, pupilId: Int)
POST    /part/o/:eventId/:contestId/:pupilId  controllers.event.EventController.openParticipation(request: Request, eventId: Int, contestId: Int, pupilId: Int)
POST    /pupil/a/:eventId/:fromHome           controllers.event.EventController.addExtraPupil(request: Request, eventId: Int, fromHome: Boolean)
POST    /o/:eventId              controllers.event.EventController.openEvent(request: Request, eventId: Int)
POST    /c/:eventId              controllers.event.EventController.closeEvent(request: Request, eventId: Int)
GET     /c/d/:eventId              controllers.event.EventController.downloadScores(request: Request, eventId: Int)
GET     /x/:lang/:ageGroupId                  controllers.event.EventController.listEventContests(request: Request, ageGroupId: Int, lang: String)
POST    /a/:lang/:contestId/:ageGroupId       controllers.event.EventController.addEvent(request: Request, contestId: Int, ageGroupId: Int, lang: String)
