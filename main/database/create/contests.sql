--  contests.sql
--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
--  Copyright Â© 2023-2024 Kris Coolsaet (Universiteit Gent)
--
--  This software is distributed under the MIT License - see files LICENSE and AUTHORS
--  in the top level project directory.

-- Age groups
-------------

-- Age groups, ordered by age_group_id which is in the range 1,..,6
-- Should be considered read only and must be initialized outside of the web application
CREATE TABLE age_groups
(
    age_group_id          INTEGER,
    lang                  CHAR(20) NOT NULL,
    age_group_name        TEXT     NOT NULL, -- e.g. 'Jedi'
    age_group_description TEXT,              -- e.g '3rd grade secondary school (16-18yo)'
    primary key (age_group_id, lang)
);

-- Contests
-----------

CREATE TYPE contest_type AS ENUM ('PUBLIC', 'RESTRICTED', 'OFFICIAL');

CREATE TYPE contest_status AS ENUM ('PENDING', 'PUBLISHED', 'OPEN', 'CLOSED');
-- pending: only visible to organisers
-- published: can be planned as a local contest


-- contest
CREATE TABLE contests
(
    contest_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    contest_type   contest_type   NOT NULL,
    contest_status contest_status NOT NULL DEFAULT 'PENDING',

    when_created   TIMESTAMP DEFAULT NOW(),
    who_created    INTEGER,
    when_updated   TIMESTAMP,
    who_updated    INTEGER
);

CREATE TRIGGER update_contest
    BEFORE UPDATE
    ON contests
    FOR EACH ROW
EXECUTE PROCEDURE update_when_modified();

-- language dependent contest information
CREATE TABLE contests_i18n
(
    contest_id    INTEGER REFERENCES contests,
    lang          CHAR(2) NOT NULL,
    contest_title TEXT,

    when_created   TIMESTAMP DEFAULT NOW(),
    who_created    INTEGER,
    when_updated   TIMESTAMP,
    who_updated    INTEGER,

    PRIMARY KEY (contest_id, lang)
);

CREATE TRIGGER update_contest_i18n
    BEFORE UPDATE
    ON contests_i18n
    FOR EACH ROW
EXECUTE PROCEDURE update_when_modified();

-- age group dependent contest information
CREATE TABLE contests_ag
(
    contest_id       INTEGER REFERENCES contests,
    age_group_id     INTEGER NOT NULL,
    contest_duration INTEGER DEFAULT 40, -- in minutes

    when_created   TIMESTAMP DEFAULT NOW(),
    who_created    INTEGER,
    when_updated   TIMESTAMP,
    who_updated    INTEGER,

    PRIMARY KEY (contest_id, age_group_id)
);

CREATE TRIGGER update_contest_ag
    BEFORE UPDATE
    ON contests_ag
    FOR EACH ROW
EXECUTE PROCEDURE update_when_modified();